[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Rkai\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Rkai\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 1.8.0_301)
[debug]       Load.loadUnit: plugins took 131.4857ms
[debug]       Load.loadUnit: defsScala took 0.1462ms
[debug] [Loading] Scanning directory C:\Users\Rkai\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rkai\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.7015 ms
[debug]           Load.resolveProject(global-plugins) took 26.4452ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Rkai\.sbt\1.0\plugins, plugins: List(<none>))) took 49.4308ms
[debug] [Loading] Done in C:\Users\Rkai\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 60.7531ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1901ms
[debug]     Load.loadUnit(file:/C:/Users/Rkai/.sbt/1.0/plugins/, ...) took 197.0416ms
[debug]   Load.apply: load took 285.6853ms
[debug]   Load.apply: resolveProjects took 3.5986ms
[debug]   Load.apply: finalTransforms took 29.1231ms
[debug]   Load.apply: config.delegates took 4.05ms
[debug]   Load.apply: Def.make(settings)... took 181.9347ms
[debug]   Load.apply: structureIndex took 53.08ms
[debug]   Load.apply: mkStreams took 1.0309ms
[info] loading global plugins from C:\Users\Rkai\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1220.5741ms
[debug]           Load.loadUnit: plugins took 25.6621ms
[debug]           Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory E:\FPGA\Transformer\Spnial_V3\project
[debug]             Load.loadUnit: mkEval took 6.6015ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\FPGA\Transformer\Spnial_V3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.729 ms
[info] loading settings for project spnial_v3-build from idea1.sbt ...
[debug]               Load.resolveProject(spnial_v3-build) took 1.8111ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spnial_v3-build, base: E:\FPGA\Transformer\Spnial_V3\project, plugins: List(<none>))) took 3.9623ms
[debug] [Loading] Done in E:\FPGA\Transformer\Spnial_V3\project, returning: (spnial_v3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1498.6753ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.6479ms
[debug]         Load.loadUnit(file:/E:/FPGA/Transformer/Spnial_V3/project/, ...) took 1528.7147ms
[debug]       Load.apply: load took 1529.4236ms
[debug]       Load.apply: resolveProjects took 0.0997ms
[debug]       Load.apply: finalTransforms took 4.7426ms
[debug]       Load.apply: config.delegates took 0.2581ms
[debug]       Load.apply: Def.make(settings)... took 54.4768ms
[debug]       Load.apply: structureIndex took 17.2659ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from E:\FPGA\Transformer\Spnial_V3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2334.6207ms
[debug]     Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory E:\FPGA\Transformer\Spnial_V3
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\FPGA\Transformer\Spnial_V3, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.1102 ms
[debug]         Load.resolveProject(spnial_v3) took 14.0052ms
[debug]       Load.loadTransitive: finalizeProject(Project(id spnial_v3, base: E:\FPGA\Transformer\Spnial_V3, plugins: List(<none>))) took 15.4391ms
[debug] [Loading] Done in E:\FPGA\Transformer\Spnial_V3, returning: (spnial_v3)
[debug]     Load.loadUnit: loadedProjectsRaw took 16.1543ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.0188ms
[debug]   Load.loadUnit(file:/E:/FPGA/Transformer/Spnial_V3/, ...) took 2351.1762ms
[debug] Load.apply: load took 2352.1434ms
[debug] Load.apply: resolveProjects took 0.0646ms
[debug] Load.apply: finalTransforms took 12.495ms
[debug] Load.apply: config.delegates took 0.153ms
[debug] Load.apply: Def.make(settings)... took 44.5136ms
[debug] Load.apply: structureIndex took 12.0191ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to spnial_v3 (in build file:/E:/FPGA/Transformer/Spnial_V3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
